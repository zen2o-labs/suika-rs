services:
  # Your existing services...
  data-ingestion-service:
    build:
      context: ./data-ingestion-service
      dockerfile: Containerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - kafka
    environment:
      - APP__SERVER__HOST=0.0.0.0
      - APP__SERVER__PORT=8080
      - APP__REDIS__URL=redis://redis:6379
      - APP__REDIS__STREAM_MAX_LEN=10000
      - APP__KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - APP__KAFKA__BATCH_TOPIC=batch_processing_topic
      - APP__KAFKA__TIMEOUT_MS=5000
      - APP__PROCESSING__BATCH_SIZE=1000
      - APP__PROCESSING__BATCH_TIMEOUT_SECS=60
      - APP__PROCESSING__REALTIME_THRESHOLD_SECS=5
      - APP__AUTH__API_KEY=railway-system-api-key-24680
      - APP__AUTH__REQUIRE_AUTH=true
      - RUST_LOG=info
    networks:
      - ingestion-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ingestion-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"  
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      CLUSTER_ID: "railway-data-cluster-001"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - ingestion-network
    restart: unless-stopped

  # Kafka UI for debugging
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: railway-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - ingestion-network
    profiles:
      - debug

  # Redis UI (RedisInsight) for debugging
  redis-insight:
    image: redis/redisinsight:latest
    depends_on:
      - redis
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - ingestion-network
    profiles:
      - debug
    restart: unless-stopped

volumes:
  redis_data:
  kafka_data:
  redis_insight_data:  # Add this volume

networks:
  ingestion-network:
    driver: bridge
